package com.vestrel00.ssc.server.interf;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;

/**
 * The server's response to a client connection request. This service is
 * dedicated to performing the protocol for the client and synchronizing with
 * the server that launched tis service.
 * 
 * @author Estrellado, Vandolf
 * 
 */
public interface SSCServerService extends Runnable {

	/**
	 * Initialize the in/out streams that will be used for communicating with
	 * the client. Closes the in and out streams and creates new ones if streams
	 * already exist.
	 * 
	 * @throws IOException
	 */
	public void openIO();

	/**
	 * Closes the in and out streams.
	 * 
	 * @throws IOException
	 */
	public void closeIO();

	/**
	 * Close all the streaming connections including the client socket.
	 * 
	 * @throws IOException
	 */
	public void stopService();

	/**
	 * Check the state of the service. If the service is still working, the
	 * protocol is performed.
	 */
	@Override
	public void run();

	/**
	 * 
	 * @return the server class in use by this service
	 */
	public SSCServer getServerClass();

	/**
	 * 
	 * @return the input stream
	 */
	public DataInputStream getInputStream();

	/**
	 * 
	 * @return the output stream.
	 */
	public DataOutputStream getOutputStream();

	public SSCServerBuffer getBuffer();

	/**
	 * Forwards E(m) and H(m) to the given service and invoke its
	 */
	public void forwardMessageToService(SSCServerService service, byte[] em,
			byte[] hm);

	/**
	 * Forwards E(m) and H(m) to the given service and invoke its
	 */
	public void forwardMessageToClient(SSCServerService service, byte[] em,
			byte[] hm);

}
