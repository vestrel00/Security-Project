package com.vestrel00.ssc.server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

import com.vestrel00.ssc.server.protocols.SSCProtocol;

/**
 * The server's response to a client request is this service.
 * @author Estrellado, Vandolf
 *
 */
public interface SSCServerService extends Runnable {

	/**
	 * Initialize the runnable giving its full attention to the given client.
	 * 
	 * @throws IOException
	 */
	public SSCServerService(Socket client) throws IOException;

	/**
	 * Initialize the BufferedReader and PrintWriters that will be used for
	 * communicating with the client. Closes the in and out streams and creates
	 * new ones if streams already exist.
	 * 
	 * @throws IOException
	 */
	public void initIOTools() throws IOException;

	/**
	 * Close all the streaming connections including the client socket.
	 * 
	 * @throws IOException
	 */
	public void stopService() throws IOException {
		inService = false;
		out.close();
		in.close();
		client.close();
	}

	@Override
	public void run() {
		while (inService) {
			protocol.work();
		}
		try {
			stopService();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
