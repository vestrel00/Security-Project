package com.vestrel00.ssc.server.datatypes;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;

/**
 * A simple data type that represents a client in the server
 * 
 * @author Estrellado, Vandolf
 * 
 */
public class SSCServerClient {

	private Socket socket;
	private DataInputStream in;
	private DataOutputStream out;
	private String name, partner;
	private SSCBufferClient buffer;

	public SSCServerClient(SSCBufferClient buffer, Socket socket, String name) {
		this.socket = socket;
		this.name = name;
		this.buffer = buffer;
		openIO();
	}
	
	/**
	 * Initialize the in/out streams that will be used for communicating with
	 * the client. Closes the in and out streams and creates new ones if streams
	 * already exist.
	 * 
	 * @throws IOException
	 */
	public void openIO() {
		if (out == null) {
			try {
				out = new DataOutputStream(socket.getOutputStream());
				in = new DataInputStream(socket.getInputStream());
			} catch (IOException e) {
				e.printStackTrace();
			}
		} else {
			closeIO();
			openIO();
		}
	}

	/**
	 * Closes the in and out streams.
	 * 
	 * @throws IOException
	 */
	public void closeIO() {
		if (out != null) {
			try {
				out.close();
				in.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
			out = null;
			in = null;
		}
	}

	public Socket getSocket() {
		return socket;
	}
	
	public DataOutputStream getOutputStream(){
		return out;
	}

	public String getName() {
		return name;
	}

	/**
	 * 
	 * @return the name of the client this client is connected to
	 */
	public String getPartner() {
		return partner;
	}
	
	public SSCBufferClient getBuffer(){
		return buffer;
	}

}
